/**
 * Autogenerated by Avro
 * <p>
 * DO NOT EDIT DIRECTLY
 */
package com.example.ticketing.purchase.event;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class PurchasePlacedEvent extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
    public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PurchasePlacedEvent\",\"namespace\":\"com.example.ticketing.purchase.event\",\"fields\":[{\"name\":\"firstName\",\"type\":\"string\"},{\"name\":\"lastName\",\"type\":\"string\"},{\"name\":\"purchaseNumber\",\"type\":\"string\"},{\"name\":\"email\",\"type\":\"string\"}]}");
    private static final long serialVersionUID = -8000497186362337696L;
    private static final SpecificData MODEL$ = new SpecificData();
    private static final BinaryMessageEncoder<PurchasePlacedEvent> ENCODER =
            new BinaryMessageEncoder<>(MODEL$, SCHEMA$);
    private static final BinaryMessageDecoder<PurchasePlacedEvent> DECODER =
            new BinaryMessageDecoder<>(MODEL$, SCHEMA$);
    @SuppressWarnings("unchecked")
    private static final org.apache.avro.io.DatumWriter<PurchasePlacedEvent>
            WRITER$ = (org.apache.avro.io.DatumWriter<PurchasePlacedEvent>) MODEL$.createDatumWriter(SCHEMA$);
    @SuppressWarnings("unchecked")
    private static final org.apache.avro.io.DatumReader<PurchasePlacedEvent>
            READER$ = (org.apache.avro.io.DatumReader<PurchasePlacedEvent>) MODEL$.createDatumReader(SCHEMA$);
    private java.lang.CharSequence firstName;
    private java.lang.CharSequence lastName;
    private java.lang.CharSequence purchaseNumber;
    private java.lang.CharSequence email;

    /**
     * Default constructor.  Note that this does not initialize fields
     * to their default values from the schema.  If that is desired then
     * one should use <code>newBuilder()</code>.
     */
    public PurchasePlacedEvent() {
    }
    /**
     * All-args constructor.
     * @param firstName The new value for firstName
     * @param lastName The new value for lastName
     * @param purchaseNumber The new value for purchaseNumber
     * @param email The new value for email
     */
    public PurchasePlacedEvent(java.lang.CharSequence firstName, java.lang.CharSequence lastName, java.lang.CharSequence purchaseNumber, java.lang.CharSequence email) {
        this.firstName = firstName;
        this.lastName = lastName;
        this.purchaseNumber = purchaseNumber;
        this.email = email;
    }

    public static org.apache.avro.Schema getClassSchema() {
        return SCHEMA$;
    }

    /**
     * Return the BinaryMessageEncoder instance used by this class.
     * @return the message encoder used by this class
     */
    public static BinaryMessageEncoder<PurchasePlacedEvent> getEncoder() {
        return ENCODER;
    }

    /**
     * Return the BinaryMessageDecoder instance used by this class.
     * @return the message decoder used by this class
     */
    public static BinaryMessageDecoder<PurchasePlacedEvent> getDecoder() {
        return DECODER;
    }

    /**
     * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
     * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
     * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
     */
    public static BinaryMessageDecoder<PurchasePlacedEvent> createDecoder(SchemaStore resolver) {
        return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
    }

    /**
     * Deserializes a PurchasePlacedEvent from a ByteBuffer.
     * @param b a byte buffer holding serialized data for an instance of this class
     * @return a PurchasePlacedEvent instance decoded from the given buffer
     * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
     */
    public static PurchasePlacedEvent fromByteBuffer(
            java.nio.ByteBuffer b) throws java.io.IOException {
        return DECODER.decode(b);
    }

    /**
     * Creates a new PurchasePlacedEvent RecordBuilder.
     * @return A new PurchasePlacedEvent RecordBuilder
     */
    public static com.example.ticketing.purchase.event.PurchasePlacedEvent.Builder newBuilder() {
        return new com.example.ticketing.purchase.event.PurchasePlacedEvent.Builder();
    }

    /**
     * Creates a new PurchasePlacedEvent RecordBuilder by copying an existing Builder.
     * @param other The existing builder to copy.
     * @return A new PurchasePlacedEvent RecordBuilder
     */
    public static com.example.ticketing.purchase.event.PurchasePlacedEvent.Builder newBuilder(com.example.ticketing.purchase.event.PurchasePlacedEvent.Builder other) {
        if (other == null) {
            return new com.example.ticketing.purchase.event.PurchasePlacedEvent.Builder();
        } else {
            return new com.example.ticketing.purchase.event.PurchasePlacedEvent.Builder(other);
        }
    }

    /**
     * Creates a new PurchasePlacedEvent RecordBuilder by copying an existing PurchasePlacedEvent instance.
     * @param other The existing instance to copy.
     * @return A new PurchasePlacedEvent RecordBuilder
     */
    public static com.example.ticketing.purchase.event.PurchasePlacedEvent.Builder newBuilder(com.example.ticketing.purchase.event.PurchasePlacedEvent other) {
        if (other == null) {
            return new com.example.ticketing.purchase.event.PurchasePlacedEvent.Builder();
        } else {
            return new com.example.ticketing.purchase.event.PurchasePlacedEvent.Builder(other);
        }
    }

    /**
     * Serializes this PurchasePlacedEvent to a ByteBuffer.
     * @return a buffer holding the serialized data for this instance
     * @throws java.io.IOException if this instance could not be serialized
     */
    public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
        return ENCODER.encode(this);
    }

    @Override
    public org.apache.avro.specific.SpecificData getSpecificData() {
        return MODEL$;
    }

    @Override
    public org.apache.avro.Schema getSchema() {
        return SCHEMA$;
    }

    // Used by DatumWriter.  Applications should not call.
    @Override
    public java.lang.Object get(int field$) {
        switch (field$) {
            case 0:
                return firstName;
            case 1:
                return lastName;
            case 2:
                return purchaseNumber;
            case 3:
                return email;
            default:
                throw new IndexOutOfBoundsException("Invalid index: " + field$);
        }
    }

    // Used by DatumReader.  Applications should not call.
    @Override
    @SuppressWarnings(value = "unchecked")
    public void put(int field$, java.lang.Object value$) {
        switch (field$) {
            case 0:
                firstName = (java.lang.CharSequence) value$;
                break;
            case 1:
                lastName = (java.lang.CharSequence) value$;
                break;
            case 2:
                purchaseNumber = (java.lang.CharSequence) value$;
                break;
            case 3:
                email = (java.lang.CharSequence) value$;
                break;
            default:
                throw new IndexOutOfBoundsException("Invalid index: " + field$);
        }
    }

    /**
     * Gets the value of the 'firstName' field.
     * @return The value of the 'firstName' field.
     */
    public java.lang.CharSequence getFirstName() {
        return firstName;
    }

    /**
     * Sets the value of the 'firstName' field.
     * @param value the value to set.
     */
    public void setFirstName(java.lang.CharSequence value) {
        this.firstName = value;
    }

    /**
     * Gets the value of the 'lastName' field.
     * @return The value of the 'lastName' field.
     */
    public java.lang.CharSequence getlastName() {
        return lastName;
    }

    /**
     * Sets the value of the 'lastName' field.
     * @param value the value to set.
     */
    public void setlastName(java.lang.CharSequence value) {
        this.lastName = value;
    }

    /**
     * Gets the value of the 'purchaseNumber' field.
     * @return The value of the 'purchaseNumber' field.
     */
    public java.lang.CharSequence getPurchaseNumber() {
        return purchaseNumber;
    }

    /**
     * Sets the value of the 'purchaseNumber' field.
     * @param value the value to set.
     */
    public void setPurchaseNumber(java.lang.CharSequence value) {
        this.purchaseNumber = value;
    }

    /**
     * Gets the value of the 'email' field.
     * @return The value of the 'email' field.
     */
    public java.lang.CharSequence getEmail() {
        return email;
    }

    /**
     * Sets the value of the 'email' field.
     * @param value the value to set.
     */
    public void setEmail(java.lang.CharSequence value) {
        this.email = value;
    }

    @Override
    public void writeExternal(java.io.ObjectOutput out)
            throws java.io.IOException {
        WRITER$.write(this, SpecificData.getEncoder(out));
    }

    @Override
    public void readExternal(java.io.ObjectInput in)
            throws java.io.IOException {
        READER$.read(this, SpecificData.getDecoder(in));
    }

    @Override
    protected boolean hasCustomCoders() {
        return true;
    }

    @Override
    public void customEncode(org.apache.avro.io.Encoder out)
            throws java.io.IOException {
        out.writeString(this.firstName);

        out.writeString(this.lastName);

        out.writeString(this.purchaseNumber);

        out.writeString(this.email);

    }

    @Override
    public void customDecode(org.apache.avro.io.ResolvingDecoder in)
            throws java.io.IOException {
        org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
        if (fieldOrder == null) {
            this.firstName = in.readString(this.firstName instanceof Utf8 ? (Utf8) this.firstName : null);

            this.lastName = in.readString(this.lastName instanceof Utf8 ? (Utf8) this.lastName : null);

            this.purchaseNumber = in.readString(this.purchaseNumber instanceof Utf8 ? (Utf8) this.purchaseNumber : null);

            this.email = in.readString(this.email instanceof Utf8 ? (Utf8) this.email : null);

        } else {
            for (int i = 0; i < 4; i++) {
                switch (fieldOrder[i].pos()) {
                    case 0:
                        this.firstName = in.readString(this.firstName instanceof Utf8 ? (Utf8) this.firstName : null);
                        break;

                    case 1:
                        this.lastName = in.readString(this.lastName instanceof Utf8 ? (Utf8) this.lastName : null);
                        break;

                    case 2:
                        this.purchaseNumber = in.readString(this.purchaseNumber instanceof Utf8 ? (Utf8) this.purchaseNumber : null);
                        break;

                    case 3:
                        this.email = in.readString(this.email instanceof Utf8 ? (Utf8) this.email : null);
                        break;

                    default:
                        throw new java.io.IOException("Corrupt ResolvingDecoder.");
                }
            }
        }
    }

    /**
     * RecordBuilder for PurchasePlacedEvent instances.
     */
    @org.apache.avro.specific.AvroGenerated
    public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PurchasePlacedEvent>
            implements org.apache.avro.data.RecordBuilder<PurchasePlacedEvent> {

        private java.lang.CharSequence firstName;
        private java.lang.CharSequence lastName;
        private java.lang.CharSequence purchaseNumber;
        private java.lang.CharSequence email;

        /** Creates a new Builder */
        private Builder() {
            super(SCHEMA$, MODEL$);
        }

        /**
         * Creates a Builder by copying an existing Builder.
         * @param other The existing Builder to copy.
         */
        private Builder(com.example.ticketing.purchase.event.PurchasePlacedEvent.Builder other) {
            super(other);
            if (isValidValue(fields()[0], other.firstName)) {
                this.firstName = data().deepCopy(fields()[0].schema(), other.firstName);
                fieldSetFlags()[0] = other.fieldSetFlags()[0];
            }
            if (isValidValue(fields()[1], other.lastName)) {
                this.lastName = data().deepCopy(fields()[1].schema(), other.lastName);
                fieldSetFlags()[1] = other.fieldSetFlags()[1];
            }
            if (isValidValue(fields()[2], other.purchaseNumber)) {
                this.purchaseNumber = data().deepCopy(fields()[2].schema(), other.purchaseNumber);
                fieldSetFlags()[2] = other.fieldSetFlags()[2];
            }
            if (isValidValue(fields()[3], other.email)) {
                this.email = data().deepCopy(fields()[3].schema(), other.email);
                fieldSetFlags()[3] = other.fieldSetFlags()[3];
            }
        }

        /**
         * Creates a Builder by copying an existing PurchasePlacedEvent instance
         * @param other The existing instance to copy.
         */
        private Builder(com.example.ticketing.purchase.event.PurchasePlacedEvent other) {
            super(SCHEMA$, MODEL$);
            if (isValidValue(fields()[0], other.firstName)) {
                this.firstName = data().deepCopy(fields()[0].schema(), other.firstName);
                fieldSetFlags()[0] = true;
            }
            if (isValidValue(fields()[1], other.lastName)) {
                this.lastName = data().deepCopy(fields()[1].schema(), other.lastName);
                fieldSetFlags()[1] = true;
            }
            if (isValidValue(fields()[2], other.purchaseNumber)) {
                this.purchaseNumber = data().deepCopy(fields()[2].schema(), other.purchaseNumber);
                fieldSetFlags()[2] = true;
            }
            if (isValidValue(fields()[3], other.email)) {
                this.email = data().deepCopy(fields()[3].schema(), other.email);
                fieldSetFlags()[3] = true;
            }
        }

        /**
         * Gets the value of the 'firstName' field.
         * @return The value.
         */
        public java.lang.CharSequence getFirstName() {
            return firstName;
        }


        /**
         * Sets the value of the 'firstName' field.
         * @param value The value of 'firstName'.
         * @return This builder.
         */
        public com.example.ticketing.purchase.event.PurchasePlacedEvent.Builder setFirstName(java.lang.CharSequence value) {
            validate(fields()[0], value);
            this.firstName = value;
            fieldSetFlags()[0] = true;
            return this;
        }

        /**
         * Checks whether the 'firstName' field has been set.
         * @return True if the 'firstName' field has been set, false otherwise.
         */
        public boolean hasFirstName() {
            return fieldSetFlags()[0];
        }


        /**
         * Clears the value of the 'firstName' field.
         * @return This builder.
         */
        public com.example.ticketing.purchase.event.PurchasePlacedEvent.Builder clearFirstName() {
            firstName = null;
            fieldSetFlags()[0] = false;
            return this;
        }

        /**
         * Gets the value of the 'lastName' field.
         * @return The value.
         */
        public java.lang.CharSequence getlastName() {
            return lastName;
        }


        /**
         * Sets the value of the 'lastName' field.
         * @param value The value of 'lastName'.
         * @return This builder.
         */
        public com.example.ticketing.purchase.event.PurchasePlacedEvent.Builder setlastName(java.lang.CharSequence value) {
            validate(fields()[1], value);
            this.lastName = value;
            fieldSetFlags()[1] = true;
            return this;
        }

        /**
         * Checks whether the 'lastName' field has been set.
         * @return True if the 'lastName' field has been set, false otherwise.
         */
        public boolean haslastName() {
            return fieldSetFlags()[1];
        }


        /**
         * Clears the value of the 'lastName' field.
         * @return This builder.
         */
        public com.example.ticketing.purchase.event.PurchasePlacedEvent.Builder clearlastName() {
            lastName = null;
            fieldSetFlags()[1] = false;
            return this;
        }

        /**
         * Gets the value of the 'purchaseNumber' field.
         * @return The value.
         */
        public java.lang.CharSequence getPurchaseNumber() {
            return purchaseNumber;
        }


        /**
         * Sets the value of the 'purchaseNumber' field.
         * @param value The value of 'purchaseNumber'.
         * @return This builder.
         */
        public com.example.ticketing.purchase.event.PurchasePlacedEvent.Builder setPurchaseNumber(java.lang.CharSequence value) {
            validate(fields()[2], value);
            this.purchaseNumber = value;
            fieldSetFlags()[2] = true;
            return this;
        }

        /**
         * Checks whether the 'purchaseNumber' field has been set.
         * @return True if the 'purchaseNumber' field has been set, false otherwise.
         */
        public boolean hasPurchaseNumber() {
            return fieldSetFlags()[2];
        }


        /**
         * Clears the value of the 'purchaseNumber' field.
         * @return This builder.
         */
        public com.example.ticketing.purchase.event.PurchasePlacedEvent.Builder clearPurchaseNumber() {
            purchaseNumber = null;
            fieldSetFlags()[2] = false;
            return this;
        }

        /**
         * Gets the value of the 'email' field.
         * @return The value.
         */
        public java.lang.CharSequence getEmail() {
            return email;
        }


        /**
         * Sets the value of the 'email' field.
         * @param value The value of 'email'.
         * @return This builder.
         */
        public com.example.ticketing.purchase.event.PurchasePlacedEvent.Builder setEmail(java.lang.CharSequence value) {
            validate(fields()[3], value);
            this.email = value;
            fieldSetFlags()[3] = true;
            return this;
        }

        /**
         * Checks whether the 'email' field has been set.
         * @return True if the 'email' field has been set, false otherwise.
         */
        public boolean hasEmail() {
            return fieldSetFlags()[3];
        }


        /**
         * Clears the value of the 'email' field.
         * @return This builder.
         */
        public com.example.ticketing.purchase.event.PurchasePlacedEvent.Builder clearEmail() {
            email = null;
            fieldSetFlags()[3] = false;
            return this;
        }

        @Override
        @SuppressWarnings("unchecked")
        public PurchasePlacedEvent build() {
            try {
                PurchasePlacedEvent record = new PurchasePlacedEvent();
                record.firstName = fieldSetFlags()[0] ? this.firstName : (java.lang.CharSequence) defaultValue(fields()[0]);
                record.lastName = fieldSetFlags()[1] ? this.lastName : (java.lang.CharSequence) defaultValue(fields()[1]);
                record.purchaseNumber = fieldSetFlags()[2] ? this.purchaseNumber : (java.lang.CharSequence) defaultValue(fields()[2]);
                record.email = fieldSetFlags()[3] ? this.email : (java.lang.CharSequence) defaultValue(fields()[3]);
                return record;
            } catch (org.apache.avro.AvroMissingFieldException e) {
                throw e;
            } catch (java.lang.Exception e) {
                throw new org.apache.avro.AvroRuntimeException(e);
            }
        }
    }
}










